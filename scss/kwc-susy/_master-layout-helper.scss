@import "susy";
@import "config/master-layouts";

$breakpoints: null;
$breakpoint-name: null;
$master-layout-name: null;

@mixin set-master-layout($layout-name, $bname: null) {
    $breakpoints: map-get($master-layouts, $layout-name) !global;
    $master-layout-name: $layout-name !global;

    @if not($bname) {
        $bname: nth(nth($breakpoints, 1), 1);
    }
    $breakpoint-name: $bname !global;

    @include layout(get-breakpoint-layout());
}

@function get-breakpoint-property($property-name, $bname: null) {
    @if not($bname) {
        $bname: $breakpoint-name;
    }
    @return map-get(map-get($breakpoints, $bname), $property-name);
}
@function get-breakpoint-layout($bname: null) {
    @return get-breakpoint-property(layout, $bname);
}
@function get-breakpoint-breakpoint($bname: null) {
    @return get-breakpoint-property(breakpoint, $bname);
}

@mixin kwf-breakpoint($bname, $layout-name: null) {
    $old-breakpoint-name: $breakpoint-name;
    $breakpoint-name: $bname !global;

    $old-master-layout-name: $master-layout-name;
    $master-layout-name: $layout-name !global;

    $old-breakpoints: $breakpoints;
    @if $layout-name {
        $breakpoints: map-get($master-layouts, $layout-name) !global;
    }
    $noMq: map-get(map-get($breakpoints, $breakpoint-name), no-mediaqueries);
    @if $noMq {
        $noMq: "html.kwfUp-no-mediaqueries";
    } @else {
        $noMq: false;
    }
    $breakpoint: get-breakpoint-property(breakpoint, $breakpoint-name);

    @if $breakpoint {
        @include susy-breakpoint($breakpoint, get-breakpoint-layout($breakpoint-name), $noMq) {
            @content;
        }
    } @else {
        @content;
    }

    $breakpoint-name: $old-breakpoint-name !global;
    $master-layout-name: $old-master-layout-name !global;
    $breakpoints: $old-breakpoints !global;
}

@mixin kwf-breakpoints($breakpoint-names, $layout-name: null) {
    @each $breakpoint-name in $breakpoint-names {
        @include kwf-breakpoint($breakpoint-name, $layout-name) {
            @content;
        }
    }
}

@mixin kwf-breakpoint-spans($breakpoint-names, $spans, $layout-name: null) {
    @if not($layout-name) { $layout-name: $master-layout-name; }
    @each $breakpoint-name in $breakpoint-names {
        @include kwf-breakpoint($breakpoint-name, $layout-name) {
            @include nested($spans) {
                &.kwfUp-#{$layout-name}-#{$breakpoint-name}-spans#{$spans} {
                    @content
                }
            }
        }
    }
}

@mixin susy-nested() {
    @if susy-get(gutter-position) == inside {
        $gutter: gutter();
        $margin: - $gutter/(1-($gutter/100%)*2);
        margin-left: $margin;
        margin-right: $margin;
    }
}

/*
@mixin master-layout-breakpoints($master-layout, $breakpoint-names) {
  $prev-layout: null;
  @each $layout-name, $layout-config in $breakpoints {
    $breakpoint: map-get($layout-config, breakpoint);
    $layout: map-get($layout-config, layout);
    @if $prev-layout != $layout {
      @if $breakpoint {
        $no-media-class: null;
        @if map-get($layout-config, no-mediaqueries) {
          $no-media-class: "html.kwfUp-no-mediaqueries";
        }
        @include susy-breakpoint($breakpoint, $layout, $no-media-class) {
          @content;
        }
      } @else {
        @content;
      }
    }
    $prev-layout: $layout;
  }
}
*/
